Starting unit tests
Running unit tests for module github.com/cosmos/cosmos-sdk
?   	github.com/cosmos/cosmos-sdk/baseapp/internal/protocompat	[no test files]
?   	github.com/cosmos/cosmos-sdk/baseapp/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/baseapp/testutil/mock	[no test files]
?   	github.com/cosmos/cosmos-sdk/client/debug	[no test files]
?   	github.com/cosmos/cosmos-sdk/client/docs	[no test files]
?   	github.com/cosmos/cosmos-sdk/client/grpc/reflection	[no test files]
?   	github.com/cosmos/cosmos-sdk/client/pruning	[no test files]
?   	github.com/cosmos/cosmos-sdk/client/snapshot	[no test files]
?   	github.com/cosmos/cosmos-sdk/codec/address	[no test files]
?   	github.com/cosmos/cosmos-sdk/codec/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/crypto/codec	[no test files]
?   	github.com/cosmos/cosmos-sdk/crypto/keys/bcrypt	[no test files]
?   	github.com/cosmos/cosmos-sdk/crypto/keys/internal/benchmarking	[no test files]
?   	github.com/cosmos/cosmos-sdk/crypto/types/multisig	[no test files]
?   	github.com/cosmos/cosmos-sdk/internal	[no test files]
?   	github.com/cosmos/cosmos-sdk/runtime	[no test files]
?   	github.com/cosmos/cosmos-sdk/runtime/services	[no test files]
?   	github.com/cosmos/cosmos-sdk/server/cmd	[no test files]
?   	github.com/cosmos/cosmos-sdk/server/grpc/reflection/v2alpha1	[no test files]
?   	github.com/cosmos/cosmos-sdk/server/log	[no test files]
?   	github.com/cosmos/cosmos-sdk/server/types	[no test files]
?   	github.com/cosmos/cosmos-sdk/std	[no test files]
?   	github.com/cosmos/cosmos-sdk/testutil/cli	[no test files]
?   	github.com/cosmos/cosmos-sdk/testutil/cmdtest	[no test files]
?   	github.com/cosmos/cosmos-sdk/testutil/configurator	[no test files]
?   	github.com/cosmos/cosmos-sdk/testutil/network	[no test files]
?   	github.com/cosmos/cosmos-sdk/types/errors	[no test files]
?   	github.com/cosmos/cosmos-sdk/types/grpc	[no test files]
?   	github.com/cosmos/cosmos-sdk/types/kv	[no test files]
?   	github.com/cosmos/cosmos-sdk/types/module/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/types/registry	[no test files]
?   	github.com/cosmos/cosmos-sdk/types/tx/amino	[no test files]
?   	github.com/cosmos/cosmos-sdk/types/tx/signing	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/auth/ante/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/auth/client/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/auth/codec	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/auth/exported	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/auth/migrations/v1	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/auth/posthandler	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/auth/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/auth/tx/config	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/auth/tx/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/auth/vesting/exported	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/auth/vesting/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/authz/client/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/authz/codec	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/authz/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/bank/exported	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/bank/migrations/v1	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/bank/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/consensus	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/consensus/exported	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/consensus/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/consensus/types	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/crisis	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/crisis/exported	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/crisis/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/crisis/types	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/distribution	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/distribution/exported	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/distribution/migrations/v1	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/distribution/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/genutil/client/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/genutil/migrations/v043	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/genutil/migrations/v046	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/genutil/migrations/v047	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/genutil/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/gov/client	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/gov/client/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/gov/codec	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/gov/exported	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/gov/migrations/v1	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/gov/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/gov/types	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/group/codec	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/group/errors	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/group/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/mint/exported	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/mint/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/params/client	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/params/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/simulation/client/cli	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/slashing/exported	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/slashing/migrations/v1	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/slashing/testutil	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/staking/exported	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/staking/migrations/v1	[no test files]
?   	github.com/cosmos/cosmos-sdk/x/staking/testutil	[no test files]
ok  	github.com/cosmos/cosmos-sdk/baseapp	13.628s
ok  	github.com/cosmos/cosmos-sdk/baseapp/oe	(cached)
ok  	github.com/cosmos/cosmos-sdk/client	(cached)
ok  	github.com/cosmos/cosmos-sdk/client/config	(cached)
ok  	github.com/cosmos/cosmos-sdk/client/flags	(cached)
ok  	github.com/cosmos/cosmos-sdk/client/grpc/cmtservice	(cached)
ok  	github.com/cosmos/cosmos-sdk/client/grpc/node	(cached)
ok  	github.com/cosmos/cosmos-sdk/client/input	(cached)
ok  	github.com/cosmos/cosmos-sdk/client/keys	(cached)
ok  	github.com/cosmos/cosmos-sdk/client/rpc	(cached)
ok  	github.com/cosmos/cosmos-sdk/client/tx	(cached)
ok  	github.com/cosmos/cosmos-sdk/codec	(cached)
ok  	github.com/cosmos/cosmos-sdk/codec/legacy	(cached)
ok  	github.com/cosmos/cosmos-sdk/codec/types	(cached)
ok  	github.com/cosmos/cosmos-sdk/codec/unknownproto	(cached)
ok  	github.com/cosmos/cosmos-sdk/crypto	(cached)
ok  	github.com/cosmos/cosmos-sdk/crypto/hd	(cached)
ok  	github.com/cosmos/cosmos-sdk/crypto/keyring	(cached)
ok  	github.com/cosmos/cosmos-sdk/crypto/keys/ed25519	(cached)
ok  	github.com/cosmos/cosmos-sdk/crypto/keys/internal/ecdsa	(cached)
ok  	github.com/cosmos/cosmos-sdk/crypto/keys/multisig	(cached)
ok  	github.com/cosmos/cosmos-sdk/crypto/keys/secp256k1	(cached)
ok  	github.com/cosmos/cosmos-sdk/crypto/keys/secp256k1/internal/secp256k1	(cached)
ok  	github.com/cosmos/cosmos-sdk/crypto/keys/secp256r1	(cached)
ok  	github.com/cosmos/cosmos-sdk/crypto/ledger	(cached)
ok  	github.com/cosmos/cosmos-sdk/crypto/types	(cached)
ok  	github.com/cosmos/cosmos-sdk/crypto/xsalsa20symmetric	(cached)
ok  	github.com/cosmos/cosmos-sdk/fuzz/tests	(cached)
ok  	github.com/cosmos/cosmos-sdk/internal/conv	(cached)
ok  	github.com/cosmos/cosmos-sdk/server	(cached)
ok  	github.com/cosmos/cosmos-sdk/server/api	(cached)
ok  	github.com/cosmos/cosmos-sdk/server/config	(cached)
ok  	github.com/cosmos/cosmos-sdk/server/grpc	(cached)
ok  	github.com/cosmos/cosmos-sdk/server/grpc/gogoreflection	(cached)
ok  	github.com/cosmos/cosmos-sdk/server/mock	(cached)
ok  	github.com/cosmos/cosmos-sdk/telemetry	(cached)
ok  	github.com/cosmos/cosmos-sdk/testutil	(cached)
ok  	github.com/cosmos/cosmos-sdk/testutil/integration	(cached)
ok  	github.com/cosmos/cosmos-sdk/testutil/mock	(cached)
ok  	github.com/cosmos/cosmos-sdk/testutil/sims	(cached)
ok  	github.com/cosmos/cosmos-sdk/types	(cached)
ok  	github.com/cosmos/cosmos-sdk/types/address	(cached)
ok  	github.com/cosmos/cosmos-sdk/types/bech32	(cached)
ok  	github.com/cosmos/cosmos-sdk/types/bech32/legacybech32	(cached)
ok  	github.com/cosmos/cosmos-sdk/types/mempool	(cached)
ok  	github.com/cosmos/cosmos-sdk/types/module	(cached)
ok  	github.com/cosmos/cosmos-sdk/types/msgservice	(cached)
ok  	github.com/cosmos/cosmos-sdk/types/query	(cached)
ok  	github.com/cosmos/cosmos-sdk/types/simulation	(cached)
ok  	github.com/cosmos/cosmos-sdk/types/tx	(cached)
ok  	github.com/cosmos/cosmos-sdk/version	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/ante	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/client	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/client/cli	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/keeper	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/migrations/legacytx	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/migrations/v2	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/migrations/v3	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/migrations/v4	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/migrations/v5	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/signing	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/simulation	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/tx	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/types	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/vesting	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/vesting/client/cli	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/auth/vesting/types	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/authz	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/authz/client/cli	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/authz/keeper	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/authz/migrations/v2	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/authz/module	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/authz/simulation	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/bank	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/bank/client/cli	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/bank/keeper	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/bank/migrations/v2	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/bank/migrations/v3	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/bank/migrations/v4	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/bank/simulation	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/bank/types	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/consensus/keeper	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/crisis/keeper	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/crisis/migrations/v2	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/distribution/client/cli	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/distribution/client/common	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/distribution/keeper	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/distribution/migrations/v2	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/distribution/migrations/v3	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/distribution/simulation	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/distribution/types	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/genutil	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/genutil/client/cli	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/genutil/types	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/gov	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/gov/client/cli	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/gov/client/utils	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/gov/keeper	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/gov/migrations/v2	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/gov/migrations/v3	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/gov/migrations/v4	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/gov/migrations/v5	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/gov/simulation	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/gov/types/v1	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/gov/types/v1beta1	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/group	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/group/client/cli	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/group/internal/math	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/group/internal/orm	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/group/keeper	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/group/migrations/v2	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/group/module	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/group/simulation	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/mint	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/mint/keeper	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/mint/migrations/v2	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/mint/simulation	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/mint/types	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/params	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/params/client/cli	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/params/client/utils	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/params/keeper	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/params/simulation	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/params/types	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/params/types/proposal	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/simulation	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/slashing	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/slashing/keeper	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/slashing/migrations/v2	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/slashing/migrations/v3	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/slashing/migrations/v4	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/slashing/simulation	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/slashing/types	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/staking	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/staking/client/cli	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/staking/keeper	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/staking/migrations/v2	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/staking/migrations/v3	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/staking/migrations/v4	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/staking/migrations/v5	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/staking/simulation	(cached)
ok  	github.com/cosmos/cosmos-sdk/x/staking/types	(cached)
Running unit tests for module cosmossdk.io/api
?   	cosmossdk.io/api/amino	[no test files]
?   	cosmossdk.io/api/cosmos/app/runtime/v1alpha1	[no test files]
?   	cosmossdk.io/api/cosmos/app/v1alpha1	[no test files]
?   	cosmossdk.io/api/cosmos/auth/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/auth/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/authz/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/authz/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/autocli/v1	[no test files]
?   	cosmossdk.io/api/cosmos/bank/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/bank/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/base/abci/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/base/node/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/base/query/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/base/reflection/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/base/reflection/v2alpha1	[no test files]
?   	cosmossdk.io/api/cosmos/base/tendermint/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/base/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/circuit/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/circuit/v1	[no test files]
?   	cosmossdk.io/api/cosmos/consensus/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/consensus/v1	[no test files]
?   	cosmossdk.io/api/cosmos/crisis/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/crisis/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/crypto/ed25519	[no test files]
?   	cosmossdk.io/api/cosmos/crypto/hd/v1	[no test files]
?   	cosmossdk.io/api/cosmos/crypto/keyring/v1	[no test files]
?   	cosmossdk.io/api/cosmos/crypto/multisig	[no test files]
?   	cosmossdk.io/api/cosmos/crypto/multisig/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/crypto/secp256k1	[no test files]
?   	cosmossdk.io/api/cosmos/crypto/secp256r1	[no test files]
?   	cosmossdk.io/api/cosmos/distribution/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/distribution/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/evidence/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/evidence/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/feegrant/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/feegrant/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/genutil/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/genutil/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/gov/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/gov/v1	[no test files]
?   	cosmossdk.io/api/cosmos/gov/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/group/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/group/v1	[no test files]
?   	cosmossdk.io/api/cosmos/mint/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/mint/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/msg/textual/v1	[no test files]
?   	cosmossdk.io/api/cosmos/msg/v1	[no test files]
?   	cosmossdk.io/api/cosmos/nft/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/nft/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/orm/module/v1alpha1	[no test files]
?   	cosmossdk.io/api/cosmos/orm/query/v1alpha1	[no test files]
?   	cosmossdk.io/api/cosmos/orm/v1	[no test files]
?   	cosmossdk.io/api/cosmos/orm/v1alpha1	[no test files]
?   	cosmossdk.io/api/cosmos/params/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/params/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/query/v1	[no test files]
?   	cosmossdk.io/api/cosmos/reflection/v1	[no test files]
?   	cosmossdk.io/api/cosmos/slashing/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/slashing/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/staking/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/staking/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/store/internal/kv/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/store/snapshots/v1	[no test files]
?   	cosmossdk.io/api/cosmos/store/streaming/abci	[no test files]
?   	cosmossdk.io/api/cosmos/store/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/tx/config/v1	[no test files]
?   	cosmossdk.io/api/cosmos/tx/signing/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/tx/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/upgrade/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/upgrade/v1beta1	[no test files]
?   	cosmossdk.io/api/cosmos/vesting/module/v1	[no test files]
?   	cosmossdk.io/api/cosmos/vesting/v1beta1	[no test files]
Running unit tests for module cosmossdk.io/client/v2
?   	cosmossdk.io/client/v2/autocli/flag	[no test files]
?   	cosmossdk.io/client/v2/autocli/flag/maps	[no test files]
?   	cosmossdk.io/client/v2/autocli/keyring	[no test files]
?   	cosmossdk.io/client/v2/helpers	[no test files]
?   	cosmossdk.io/client/v2/internal/flags	[no test files]
?   	cosmossdk.io/client/v2/internal/testpb	[no test files]
ok  	cosmossdk.io/client/v2/autocli	(cached)
ok  	cosmossdk.io/client/v2/internal/strcase	(cached)
ok  	cosmossdk.io/client/v2/internal/util	(cached)
Running unit tests for module cosmossdk.io/collections
ok  	cosmossdk.io/collections	(cached)
ok  	cosmossdk.io/collections/codec	(cached)
ok  	cosmossdk.io/collections/colltest	(cached)
ok  	cosmossdk.io/collections/indexes	(cached)
Running unit tests for module cosmossdk.io/core
?   	cosmossdk.io/core/address	[no test files]
?   	cosmossdk.io/core/comet	[no test files]
?   	cosmossdk.io/core/event	[no test files]
?   	cosmossdk.io/core/gas	[no test files]
?   	cosmossdk.io/core/header	[no test files]
?   	cosmossdk.io/core/intermodule	[no test files]
?   	cosmossdk.io/core/internal	[no test files]
?   	cosmossdk.io/core/internal/testpb	[no test files]
?   	cosmossdk.io/core/store	[no test files]
ok  	cosmossdk.io/core/appconfig	0.284s
ok  	cosmossdk.io/core/appmodule	(cached)
--- FAIL: TestFormatCoin (0.00s)
    --- FAIL: TestFormatCoin/#01 (0.00s)
        format_test.go:44: 
            	Error Trace:	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/core/coins/format_test.go:44
            	Error:      	An error is expected but got nil.
            	Test:       	TestFormatCoin/#01
FAIL
FAIL	cosmossdk.io/core/coins	0.524s
ok  	cosmossdk.io/core/genesis	(cached)
FAIL
Running unit tests for module cosmossdk.io/depinject
?   	cosmossdk.io/depinject/internal/graphviz	[no test files]
?   	cosmossdk.io/depinject/internal/util	[no test files]
ok  	cosmossdk.io/depinject	(cached)
ok  	cosmossdk.io/depinject/internal/codegen	(cached)
Running unit tests for module cosmossdk.io/errors
ok  	cosmossdk.io/errors	(cached)
Running unit tests for module cosmossdk.io/log
ok  	cosmossdk.io/log	(cached)
Running unit tests for module cosmossdk.io/math
?   	cosmossdk.io/math/unsafe	[no test files]
ok  	cosmossdk.io/math	(cached)
Running unit tests for module cosmossdk.io/orm
?   	cosmossdk.io/orm	[no test files]
?   	cosmossdk.io/orm/cmd/protoc-gen-go-cosmos-orm	[no test files]
?   	cosmossdk.io/orm/cmd/protoc-gen-go-cosmos-orm-proto	[no test files]
?   	cosmossdk.io/orm/encoding	[no test files]
?   	cosmossdk.io/orm/encoding/encodeutil	[no test files]
ok  	cosmossdk.io/orm/encoding/ormfield	(cached)
?   	cosmossdk.io/orm/internal/codegen	[no test files]
?   	cosmossdk.io/orm/internal/listinternal	[no test files]
?   	cosmossdk.io/orm/internal/testkv	[no test files]
ok  	cosmossdk.io/orm/encoding/ormkv	(cached)
?   	cosmossdk.io/orm/internal/testpb	[no test files]
?   	cosmossdk.io/orm/internal/testutil	[no test files]
?   	cosmossdk.io/orm/model	[no test files]
ok  	cosmossdk.io/orm/internal/fieldnames	(cached)
ok  	cosmossdk.io/orm/internal/stablejson	(cached)
?   	cosmossdk.io/orm/model/ormlist	[no test files]
ok  	cosmossdk.io/orm/model/ormdb	(cached)
?   	cosmossdk.io/orm/testing/ormmocks	[no test files]
?   	cosmossdk.io/orm/testing/ormtest	[no test files]
?   	cosmossdk.io/orm/types	[no test files]
?   	cosmossdk.io/orm/types/kv	[no test files]
?   	cosmossdk.io/orm/types/ormerrors	[no test files]
ok  	cosmossdk.io/orm/model/ormtable	(cached)
Running unit tests for module cosmossdk.io/simapp
?   	cosmossdk.io/simapp/params	[no test files]
?   	cosmossdk.io/simapp/simd	[no test files]
ok  	cosmossdk.io/simapp	(cached)
ok  	cosmossdk.io/simapp/simd/cmd	(cached)
Running unit tests for module cosmossdk.io/store
?   	cosmossdk.io/store	[no test files]
ok  	cosmossdk.io/store/cache	(cached)
ok  	cosmossdk.io/store/cachekv	(cached)
ok  	cosmossdk.io/store/cachekv/internal	(cached)
ok  	cosmossdk.io/store/cachemulti	(cached)
ok  	cosmossdk.io/store/dbadapter	(cached)
ok  	cosmossdk.io/store/gaskv	(cached)
?   	cosmossdk.io/store/internal/kv	[no test files]
?   	cosmossdk.io/store/internal/tree	[no test files]
ok  	cosmossdk.io/store/iavl	(cached)
ok  	cosmossdk.io/store/internal/conv	(cached)
ok  	cosmossdk.io/store/internal/maps	(cached)
ok  	cosmossdk.io/store/internal/proofs	(cached)
ok  	cosmossdk.io/store/listenkv	(cached)
?   	cosmossdk.io/store/metrics	[no test files]
?   	cosmossdk.io/store/mock	[no test files]
ok  	cosmossdk.io/store/mem	(cached)
ok  	cosmossdk.io/store/prefix	(cached)
ok  	cosmossdk.io/store/pruning	(cached)
ok  	cosmossdk.io/store/pruning/types	(cached)
?   	cosmossdk.io/store/snapshots/types	[no test files]
ok  	cosmossdk.io/store/rootmulti	(cached)
ok  	cosmossdk.io/store/snapshots	(cached)
?   	cosmossdk.io/store/streaming/abci	[no test files]
?   	cosmossdk.io/store/streaming/abci/examples/file	[no test files]
?   	cosmossdk.io/store/streaming/abci/examples/stdout	[no test files]
ok  	cosmossdk.io/store/streaming	(cached)
ok  	cosmossdk.io/store/tracekv	(cached)
ok  	cosmossdk.io/store/transient	(cached)
?   	cosmossdk.io/store/wrapper	[no test files]
ok  	cosmossdk.io/store/types	(cached)
Running unit tests for module github.com/cosmos/cosmos-sdk/tests
?   	github.com/cosmos/cosmos-sdk/tests/e2e/auth	[no test files]
?   	github.com/cosmos/cosmos-sdk/tests/e2e/authz	[no test files]
?   	github.com/cosmos/cosmos-sdk/tests/e2e/bank	[no test files]
?   	github.com/cosmos/cosmos-sdk/tests/e2e/distribution	[no test files]
?   	github.com/cosmos/cosmos-sdk/tests/e2e/gov	[no test files]
?   	github.com/cosmos/cosmos-sdk/tests/e2e/group	[no test files]
?   	github.com/cosmos/cosmos-sdk/tests/e2e/mint	[no test files]
?   	github.com/cosmos/cosmos-sdk/tests/e2e/staking	[no test files]
ok  	github.com/cosmos/cosmos-sdk/tests/e2e/tx	(cached)
ok  	github.com/cosmos/cosmos-sdk/tests/integration/auth/client/cli	(cached)
?   	github.com/cosmos/cosmos-sdk/tests/integration/rapidgen	[no test files]
?   	github.com/cosmos/cosmos-sdk/tests/integration/tx/internal/gogo/testpb	[no test files]
?   	github.com/cosmos/cosmos-sdk/tests/integration/tx/internal/pulsar/testpb	[no test files]
--- FAIL: TestGRPCQuerySpendableBalances (0.01s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000438030, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000438030, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000438040, bank}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000438040, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000438040, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000438030, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000438030, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
    deterministic_test.go:198: [rapid] panic after 0 tests: runtime error: invalid memory address or nil pointer dereference
        To reproduce, specify -run="TestGRPCQuerySpendableBalances" -rapid.failfile="testdata/rapid/TestGRPCQuerySpendableBalances/TestGRPCQuerySpendableBalances-20250310143833-51014.fail"
        Traceback:
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:15 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseViewKeeper.getTransientAccountStore
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:21 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setTransientBalance
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:359 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setBalance
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:326 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.addCoins
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/keeper.go:363 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper.MintCoins
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/testutil/helpers.go:18 in github.com/cosmos/cosmos-sdk/x/bank/testutil.FundAccount
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/bank/keeper/deterministic_test.go:214 in github.com/cosmos/cosmos-sdk/tests/integration/bank/keeper_test.TestGRPCQuerySpendableBalances.func1
            /Users/simon/dev/go-workspace/pkg/mod/pgregory.net/rapid@v1.1.0/engine.go:368 in pgregory.net/rapid.checkOnce
        Failed test output:
    deterministic_test.go:199: [rapid] draw address: 0000000000000000000000000000000000000000
    deterministic_test.go:202: [rapid] draw denoms: []string{"A--"}
    deterministic_test.go:207: [rapid] draw amount: 1
--- FAIL: TestGRPCQueryAllBalances (0.00s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140010f8640, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x140010f8640, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140010f8650, bank}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140010f8640, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x140010f8640, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140010f8650, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x140010f8650, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
    deterministic_test.go:165: [rapid] panic after 0 tests: runtime error: invalid memory address or nil pointer dereference
        To reproduce, specify -run="TestGRPCQueryAllBalances" -rapid.failfile="testdata/rapid/TestGRPCQueryAllBalances/TestGRPCQueryAllBalances-20250310143833-51014.fail"
        Traceback:
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:15 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseViewKeeper.getTransientAccountStore
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:21 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setTransientBalance
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:359 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setBalance
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:326 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.addCoins
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/keeper.go:363 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper.MintCoins
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/testutil/helpers.go:18 in github.com/cosmos/cosmos-sdk/x/bank/testutil.FundAccount
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/bank/keeper/deterministic_test.go:131 in github.com/cosmos/cosmos-sdk/tests/integration/bank/keeper_test.fundAccount
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/bank/keeper/deterministic_test.go:177 in github.com/cosmos/cosmos-sdk/tests/integration/bank/keeper_test.TestGRPCQueryAllBalances.func1
            /Users/simon/dev/go-workspace/pkg/mod/pgregory.net/rapid@v1.1.0/engine.go:368 in pgregory.net/rapid.checkOnce
        Failed test output:
    deterministic_test.go:166: [rapid] draw address: 0000000000000000000000000000000000000000
    deterministic_test.go:167: [rapid] draw num-count: 1
    deterministic_test.go:137: [rapid] draw denom: "A--"
    deterministic_test.go:138: [rapid] draw amount: 1
--- FAIL: TestGRPCDenomOwners (0.01s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x1400018e130, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x1400018e130, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x1400018e150, bank}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x1400018e130, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x1400018e130, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x1400018e150, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x1400018e150, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
    deterministic_test.go:479: [rapid] panic after 0 tests: runtime error: invalid memory address or nil pointer dereference
        To reproduce, specify -run="TestGRPCDenomOwners" -rapid.failfile="testdata/rapid/TestGRPCDenomOwners/TestGRPCDenomOwners-20250310143833-51014.fail"
        Traceback:
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:15 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseViewKeeper.getTransientAccountStore
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:21 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setTransientBalance
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:359 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setBalance
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:326 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.addCoins
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/keeper.go:363 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper.MintCoins
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/testutil/helpers.go:18 in github.com/cosmos/cosmos-sdk/x/bank/testutil.FundAccount
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/bank/keeper/deterministic_test.go:490 in github.com/cosmos/cosmos-sdk/tests/integration/bank/keeper_test.TestGRPCDenomOwners.func1
            /Users/simon/dev/go-workspace/pkg/mod/pgregory.net/rapid@v1.1.0/engine.go:368 in pgregory.net/rapid.checkOnce
        Failed test output:
    deterministic_test.go:480: [rapid] draw denom: "A--"
    deterministic_test.go:481: [rapid] draw number-address: 1
    deterministic_test.go:483: [rapid] draw address: 0000000000000000000000000000000000000000
    deterministic_test.go:487: [rapid] draw amount: 1
--- FAIL: TestGRPCQueryBalance (0.01s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140004045a0, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x140004045a0, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140004045c0, bank}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140004045a0, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x140004045a0, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140004045c0, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x140004045c0, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
    deterministic_test.go:146: [rapid] panic after 0 tests: runtime error: invalid memory address or nil pointer dereference
        To reproduce, specify -run="TestGRPCQueryBalance" -rapid.failfile="testdata/rapid/TestGRPCQueryBalance/TestGRPCQueryBalance-20250310143833-51014.fail"
        Traceback:
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:15 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseViewKeeper.getTransientAccountStore
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:21 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setTransientBalance
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:359 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setBalance
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:326 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.addCoins
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/keeper.go:363 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper.MintCoins
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/testutil/helpers.go:18 in github.com/cosmos/cosmos-sdk/x/bank/testutil.FundAccount
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/bank/keeper/deterministic_test.go:131 in github.com/cosmos/cosmos-sdk/tests/integration/bank/keeper_test.fundAccount
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/bank/keeper/deterministic_test.go:149 in github.com/cosmos/cosmos-sdk/tests/integration/bank/keeper_test.TestGRPCQueryBalance.func1
            /Users/simon/dev/go-workspace/pkg/mod/pgregory.net/rapid@v1.1.0/engine.go:368 in pgregory.net/rapid.checkOnce
        Failed test output:
    deterministic_test.go:147: [rapid] draw address: 0000000000000000000000000000000000000000
    deterministic_test.go:137: [rapid] draw denom: "A--"
    deterministic_test.go:138: [rapid] draw amount: 1
--- FAIL: TestGRPCQueryTotalSupply (0.01s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000592040, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000592040, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000592050, bank}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000592050, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000592050, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000592040, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000592040, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
    deterministic_test.go:241: [rapid] panic after 0 tests: runtime error: invalid memory address or nil pointer dereference
        To reproduce, specify -run="TestGRPCQueryTotalSupply" -rapid.failfile="testdata/rapid/TestGRPCQueryTotalSupply/TestGRPCQueryTotalSupply-20250310143833-51014.fail"
        Traceback:
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:15 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseViewKeeper.getTransientAccountStore
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:21 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setTransientBalance
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:359 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setBalance
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:326 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.addCoins
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/keeper.go:363 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper.MintCoins
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/bank/keeper/deterministic_test.go:254 in github.com/cosmos/cosmos-sdk/tests/integration/bank/keeper_test.TestGRPCQueryTotalSupply.func1
            /Users/simon/dev/go-workspace/pkg/mod/pgregory.net/rapid@v1.1.0/engine.go:368 in pgregory.net/rapid.checkOnce
        Failed test output:
    deterministic_test.go:242: [rapid] draw num-count: 1
    deterministic_test.go:247: [rapid] draw denom: "A--"
    deterministic_test.go:248: [rapid] draw amount: 1
--- FAIL: TestGRPCQueryTotalSupplyOf (0.00s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14001174e40, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14001174e40, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14001174e50, bank}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14001174e50, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14001174e50, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14001174e40, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14001174e40, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
    deterministic_test.go:282: [rapid] panic after 0 tests: runtime error: invalid memory address or nil pointer dereference
        To reproduce, specify -run="TestGRPCQueryTotalSupplyOf" -rapid.failfile="testdata/rapid/TestGRPCQueryTotalSupplyOf/TestGRPCQueryTotalSupplyOf-20250310143833-51014.fail"
        Traceback:
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:15 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseViewKeeper.getTransientAccountStore
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:21 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setTransientBalance
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:359 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setBalance
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:326 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.addCoins
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/keeper.go:363 in github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper.MintCoins
            /Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/bank/keeper/deterministic_test.go:288 in github.com/cosmos/cosmos-sdk/tests/integration/bank/keeper_test.TestGRPCQueryTotalSupplyOf.func1
            /Users/simon/dev/go-workspace/pkg/mod/pgregory.net/rapid@v1.1.0/engine.go:368 in pgregory.net/rapid.checkOnce
        Failed test output:
    deterministic_test.go:284: [rapid] draw denom: "A--"
    deterministic_test.go:285: [rapid] draw amount: 1
--- FAIL: TestGRPCDenomMetadata (3.32s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140004ce4a0, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x140004ce4a0, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140004ce4f0, bank}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140004ce4a0, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x140004ce4a0, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140004ce4f0, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x140004ce4f0, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
    deterministic_test.go:405: [rapid] OK, passed 100 tests (3.313421791s)
    grpc_query.go:87: assertion failed: 1306 (ctx.GasMeter().GasConsumed() - before uint64) != 1300 (gasConsumed uint64)
--- FAIL: TestGRPCDenomsMetadata (80.51s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000947a10, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000947a10, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000947a20, bank}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000947a20, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000947a20, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000947a10, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000947a10, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
    deterministic_test.go:377: [rapid] OK, passed 100 tests (1m20.502300292s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14001848a80, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14001848a80, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14001848a70, acc}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14001848a70, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14001848a70, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14001848a80, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14001848a80, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
    grpc_query.go:87: assertion failed: 672 (ctx.GasMeter().GasConsumed() - before uint64) != 660 (gasConsumed uint64)
FAIL
FAIL	github.com/cosmos/cosmos-sdk/tests/integration/bank/keeper	81.193s
ok  	github.com/cosmos/cosmos-sdk/tests/integration/distribution	(cached)
--- FAIL: TestGRPCDelegationRewards (0.01s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000114110, staking}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000114110, staking}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140001140b0, acc}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140001140d0, bank}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140001140f0, distribution}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140001140f0, distribution}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x140001140f0, distribution}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000114110, staking}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000114110, staking}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140001140b0, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x140001140b0, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x140001140d0, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x140001140d0, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: mutable_tree.go:360: [90m<nil>[0m DBG recursiveRemove [36mkey=[0m"accountNumber\x00\x00\x00\x00\x00\x00\x00\x00" [36mnode=[0m"Node{\x02:@ <nil>:- 4-2 }#\n"
    buffer.go:261: mutable_tree.go:360: [90m<nil>[0m DBG recursiveRemove [36mkey=[0m"accountNumber\x00\x00\x00\x00\x00\x00\x00\x00" [36mnode=[0m"Node{a:@ <nil>:- 2-1 }#\n"
    buffer.go:261: mutable_tree.go:360: [90m<nil>[0m DBG recursiveRemove [36mkey=[0m"accountNumber\x00\x00\x00\x00\x00\x00\x00\x00" [36mnode=[0m"Node{a:\u0093@ <nil>:- 1-0 }#\n"
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
panic: runtime error: invalid memory address or nil pointer dereference [recovered]
	panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x2 addr=0x18 pc=0x101e8631c]

goroutine 13 [running]:
testing.tRunner.func1.2({0x102919b40, 0x103ee9cd0})
	/usr/local/go/src/testing/testing.go:1632 +0x1bc
testing.tRunner.func1()
	/usr/local/go/src/testing/testing.go:1635 +0x334
panic({0x102919b40?, 0x103ee9cd0?})
	/usr/local/go/src/runtime/panic.go:785 +0x124
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseViewKeeper.getTransientAccountStore({{0x102cc1530, 0x140001141c0}, {0x102c88ec0, 0x14000cc6718}, {0x0, 0x0}, {0x102cc7000, 0x14001164a00}, {0x102cb51c0, 0x1040134e0}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:15 +0x4c
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setTransientBalance({{{0x102cc1530, 0x140001141c0}, {0x102c88ec0, 0x14000cc6718}, {0x0, 0x0}, {0x102cc7000, 0x14001164a00}, {0x102cb51c0, 0x1040134e0}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:21 +0xd8
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setBalance({{{0x102cc1530, 0x140001141c0}, {0x102c88ec0, 0x14000cc6718}, {0x0, 0x0}, {0x102cc7000, 0x14001164a00}, {0x102cb51c0, 0x1040134e0}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:359 +0x274
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.addCoins({{{0x102cc1530, 0x140001141c0}, {0x102c88ec0, 0x14000cc6718}, {0x0, 0x0}, {0x102cc7000, 0x14001164a00}, {0x102cb51c0, 0x1040134e0}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:326 +0x174
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper.MintCoins({{{{0x102cc1530, 0x140001141c0}, {0x102c88ec0, 0x14000cc6718}, {0x0, 0x0}, {0x102cc7000, 0x14001164a00}, {0x102cb51c0, 0x1040134e0}, ...}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/keeper.go:363 +0x204
github.com/cosmos/cosmos-sdk/tests/integration/distribution/keeper_test.TestGRPCDelegationRewards(0x14000b5c680)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/distribution/keeper/grpc_query_test.go:484 +0x23c
testing.tRunner(0x14000b5c680, 0x102c7a738)
	/usr/local/go/src/testing/testing.go:1690 +0xe4
created by testing.(*T).Run in goroutine 1
	/usr/local/go/src/testing/testing.go:1743 +0x314
FAIL	github.com/cosmos/cosmos-sdk/tests/integration/distribution/keeper	1.201s
--- FAIL: TestHandleDoubleSign (0.01s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f350, consensus}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b5f350, consensus}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f360, evidence}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f370, staking}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f380, slashing}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f320, acc}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f330, bank}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f340, params}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f320, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b5f320, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f330, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b5f330, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f340, params}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b5f340, params}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f350, consensus}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b5f350, consensus}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f360, evidence}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b5f360, evidence}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f370, staking}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b5f370, staking}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b5f380, slashing}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b5f380, slashing}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
panic: runtime error: invalid memory address or nil pointer dereference [recovered]
	panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x2 addr=0x18 pc=0x10204883c]

goroutine 8 [running]:
testing.tRunner.func1.2({0x102ad3d80, 0x1040c9cf0})
	/usr/local/go/src/testing/testing.go:1632 +0x1bc
testing.tRunner.func1()
	/usr/local/go/src/testing/testing.go:1635 +0x334
panic({0x102ad3d80?, 0x1040c9cf0?})
	/usr/local/go/src/runtime/panic.go:785 +0x124
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseViewKeeper.getTransientAccountStore({{0x102e80b50, 0x14000b5f3c0}, {0x102e47a40, 0x14000c8c080}, {0x0, 0x0}, {0x102e866a0, 0x1400082b180}, {0x102e744f8, 0x1041f5660}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:15 +0x4c
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setTransientBalance({{{0x102e80b50, 0x14000b5f3c0}, {0x102e47a40, 0x14000c8c080}, {0x0, 0x0}, {0x102e866a0, 0x1400082b180}, {0x102e744f8, 0x1041f5660}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:21 +0xd8
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setBalance({{{0x102e80b50, 0x14000b5f3c0}, {0x102e47a40, 0x14000c8c080}, {0x0, 0x0}, {0x102e866a0, 0x1400082b180}, {0x102e744f8, 0x1041f5660}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:359 +0x274
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.addCoins({{{0x102e80b50, 0x14000b5f3c0}, {0x102e47a40, 0x14000c8c080}, {0x0, 0x0}, {0x102e866a0, 0x1400082b180}, {0x102e744f8, 0x1041f5660}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:326 +0x174
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper.MintCoins({{{{0x102e80b50, 0x14000b5f3c0}, {0x102e47a40, 0x14000c8c080}, {0x0, 0x0}, {0x102e866a0, 0x1400082b180}, {0x102e744f8, 0x1041f5660}, ...}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/keeper.go:363 +0x204
github.com/cosmos/cosmos-sdk/tests/integration/evidence/keeper_test.populateValidators({0x102e59320, 0x14000b72000}, 0x1400096b008)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/evidence/keeper/infraction_test.go:318 +0xf4
github.com/cosmos/cosmos-sdk/tests/integration/evidence/keeper_test.TestHandleDoubleSign(0x14000b72000)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/evidence/keeper/infraction_test.go:175 +0xf0
testing.tRunner(0x14000b72000, 0x102e390f0)
	/usr/local/go/src/testing/testing.go:1690 +0xe4
created by testing.(*T).Run in goroutine 1
	/usr/local/go/src/testing/testing.go:1743 +0x314
FAIL	github.com/cosmos/cosmos-sdk/tests/integration/evidence/keeper	1.820s
ok  	github.com/cosmos/cosmos-sdk/tests/integration/gov	(cached)
--- FAIL: TestGRPCQueryTally (0.01s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b679a0, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b679a0, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b679b0, distribution}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b679c0, staking}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b679d0, gov}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b67990, acc}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b679c0, staking}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b679c0, staking}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b679d0, gov}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b679d0, gov}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b67990, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b67990, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b679a0, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b679a0, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000b679b0, distribution}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000b679b0, distribution}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: mutable_tree.go:360: [90m<nil>[0m DBG recursiveRemove [36mkey=[0m"accountNumber\x00\x00\x00\x00\x00\x00\x00\x00" [36mnode=[0m"Node{a:@ <nil>:- 3-2 }#\n"
    buffer.go:261: mutable_tree.go:360: [90m<nil>[0m DBG recursiveRemove [36mkey=[0m"accountNumber\x00\x00\x00\x00\x00\x00\x00\x00" [36mnode=[0m"Node{a:{@ <nil>:- 1-0 }#\n"
    buffer.go:261: mutable_tree.go:360: [90m<nil>[0m DBG recursiveRemove [36mkey=[0m"accountNumber\x00\x00\x00\x00\x00\x00\x00\x01" [36mnode=[0m"Node{\x02:@ <nil>:- 6-3 }#\n"
    buffer.go:261: mutable_tree.go:360: [90m<nil>[0m DBG recursiveRemove [36mkey=[0m"accountNumber\x00\x00\x00\x00\x00\x00\x00\x01" [36mnode=[0m"Node{a:@ <nil>:- 3-2 }#\n"
    buffer.go:261: mutable_tree.go:360: [90m<nil>[0m DBG recursiveRemove [36mkey=[0m"accountNumber\x00\x00\x00\x00\x00\x00\x00\x01" [36mnode=[0m"Node{a:@ <nil>:- 2-1 }#\n"
    buffer.go:261: mutable_tree.go:360: [90m<nil>[0m DBG recursiveRemove [36mkey=[0m"accountNumber\x00\x00\x00\x00\x00\x00\x00\x01" [36mnode=[0m"Node{a:\u0093@ <nil>:- 1-0 }#\n"
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
panic: runtime error: invalid memory address or nil pointer dereference [recovered]
	panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x2 addr=0x18 pc=0x101c3ed4c]

goroutine 8 [running]:
testing.tRunner.func1.2({0x1027617e0, 0x103d79d20})
	/usr/local/go/src/testing/testing.go:1632 +0x1bc
testing.tRunner.func1()
	/usr/local/go/src/testing/testing.go:1635 +0x334
panic({0x1027617e0?, 0x103d79d20?})
	/usr/local/go/src/runtime/panic.go:785 +0x124
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseViewKeeper.getTransientAccountStore({{0x102b11c10, 0x14000b67a10}, {0x102ad8760, 0x14000d020a0}, {0x0, 0x0}, {0x102b18100, 0x1400027f900}, {0x102b04ec8, 0x103ea18c0}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:15 +0x4c
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setTransientBalance({{{0x102b11c10, 0x14000b67a10}, {0x102ad8760, 0x14000d020a0}, {0x0, 0x0}, {0x102b18100, 0x1400027f900}, {0x102b04ec8, 0x103ea18c0}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:21 +0xd8
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setBalance({{{0x102b11c10, 0x14000b67a10}, {0x102ad8760, 0x14000d020a0}, {0x0, 0x0}, {0x102b18100, 0x1400027f900}, {0x102b04ec8, 0x103ea18c0}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:359 +0x274
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.addCoins({{{0x102b11c10, 0x14000b67a10}, {0x102ad8760, 0x14000d020a0}, {0x0, 0x0}, {0x102b18100, 0x1400027f900}, {0x102b04ec8, 0x103ea18c0}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:326 +0x174
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper.MintCoins({{{{0x102b11c10, 0x14000b67a10}, {0x102ad8760, 0x14000d020a0}, {0x0, 0x0}, {0x102b18100, 0x1400027f900}, {0x102b04ec8, 0x103ea18c0}, ...}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/keeper.go:363 +0x204
github.com/cosmos/cosmos-sdk/testutil/sims.initAccountWithCoins({_, _}, {{0x102afef60, 0x103ea18c0}, {0x102b11e40, 0x14000c14fc8}, {{0x0, 0x0}, {0x10216f479, 0xf}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/testutil/sims/address_helpers.go:70 +0x84
github.com/cosmos/cosmos-sdk/testutil/sims.addTestAddrs({_, _}, {_, _}, {{0x102afef60, 0x103ea18c0}, {0x102b11e40, 0x14000c14fc8}, {{0x0, 0x0}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/testutil/sims/address_helpers.go:63 +0x120
github.com/cosmos/cosmos-sdk/testutil/sims.AddTestAddrsIncremental(...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/testutil/sims/address_helpers.go:51
github.com/cosmos/cosmos-sdk/tests/integration/gov/keeper_test.createValidators(0x140009c7ba0, 0x140012c6408, {0x14000bc9d60, 0x3, 0x10375ade0?})
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/gov/keeper/common_test.go:39 +0x104
github.com/cosmos/cosmos-sdk/tests/integration/gov/keeper_test.TestGRPCQueryTally(0x140009c7ba0)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/gov/keeper/grpc_query_test.go:22 +0xd0
testing.tRunner(0x140009c7ba0, 0x102ac9d30)
	/usr/local/go/src/testing/testing.go:1690 +0xe4
created by testing.(*T).Run in goroutine 1
	/usr/local/go/src/testing/testing.go:1743 +0x314
FAIL	github.com/cosmos/cosmos-sdk/tests/integration/gov/keeper	2.513s
ok  	github.com/cosmos/cosmos-sdk/tests/integration/runtime	(cached)
--- FAIL: TestValidatorDippingInAndOut (0.00s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c80030, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000c80030, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c80040, bank}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c80050, slashing}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c80060, staking}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c80040, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000c80040, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c80050, slashing}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000c80050, slashing}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c80060, staking}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000c80060, staking}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c80030, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000c80030, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
panic: runtime error: invalid memory address or nil pointer dereference [recovered]
	panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x2 addr=0x18 pc=0x1059bedbc]

goroutine 16 [running]:
testing.tRunner.func1.2({0x10644daa0, 0x107a1dcd0})
	/usr/local/go/src/testing/testing.go:1632 +0x1bc
testing.tRunner.func1()
	/usr/local/go/src/testing/testing.go:1635 +0x334
panic({0x10644daa0?, 0x107a1dcd0?})
	/usr/local/go/src/runtime/panic.go:785 +0x124
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseViewKeeper.getTransientAccountStore({{0x1067f37f0, 0x14000c800a0}, {0x1067bb1e0, 0x14000c841c0}, {0x0, 0x0}, {0x1067f93e0, 0x14000cb2dc0}, {0x1067e74d8, 0x107b47b40}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:15 +0x4c
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setTransientBalance({{{0x1067f37f0, 0x14000c800a0}, {0x1067bb1e0, 0x14000c841c0}, {0x0, 0x0}, {0x1067f93e0, 0x14000cb2dc0}, {0x1067e74d8, 0x107b47b40}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:21 +0xd8
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setBalance({{{0x1067f37f0, 0x14000c800a0}, {0x1067bb1e0, 0x14000c841c0}, {0x0, 0x0}, {0x1067f93e0, 0x14000cb2dc0}, {0x1067e74d8, 0x107b47b40}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:359 +0x274
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.addCoins({{{0x1067f37f0, 0x14000c800a0}, {0x1067bb1e0, 0x14000c841c0}, {0x0, 0x0}, {0x1067f93e0, 0x14000cb2dc0}, {0x1067e74d8, 0x107b47b40}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:326 +0x174
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper.MintCoins({{{{0x1067f37f0, 0x14000c800a0}, {0x1067bb1e0, 0x14000c841c0}, {0x0, 0x0}, {0x1067f93e0, 0x14000cb2dc0}, {0x1067e74d8, 0x107b47b40}, ...}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/keeper.go:363 +0x204
github.com/cosmos/cosmos-sdk/testutil/sims.initAccountWithCoins({_, _}, {{0x1067e16c0, 0x107b47b40}, {0x1067f3c50, 0x14000cacd88}, {{0x0, 0x0}, {0x105e6a219, 0xf}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/testutil/sims/address_helpers.go:70 +0x84
github.com/cosmos/cosmos-sdk/testutil/sims.addTestAddrs({_, _}, {_, _}, {{0x1067e16c0, 0x107b47b40}, {0x1067f3c50, 0x14000cacd88}, {{0x0, 0x0}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/testutil/sims/address_helpers.go:63 +0x120
github.com/cosmos/cosmos-sdk/testutil/sims.AddTestAddrsIncremental(...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/testutil/sims/address_helpers.go:51
github.com/cosmos/cosmos-sdk/tests/integration/slashing/keeper_test.initFixture({0x1068082b0, 0x14000af5d40})
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/slashing/keeper/keeper_test.go:121 +0x1390
github.com/cosmos/cosmos-sdk/tests/integration/slashing/keeper_test.TestValidatorDippingInAndOut(0x14000af5d40)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/slashing/keeper/keeper_test.go:343 +0x38
testing.tRunner(0x14000af5d40, 0x1067aca88)
	/usr/local/go/src/testing/testing.go:1690 +0xe4
created by testing.(*T).Run in goroutine 1
	/usr/local/go/src/testing/testing.go:1743 +0x314
FAIL	github.com/cosmos/cosmos-sdk/tests/integration/slashing/keeper	0.678s
--- FAIL: TestUpdateBondedValidatorsDecreaseCliff (0.00s)
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c08710, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000c08710, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c08720, bank}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c08730, staking}" [36mver=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:215: [90m<nil>[0m DBG loadVersion [36mver=[0m0
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c08730, staking}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000c08730, staking}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c08710, acc}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000c08710, acc}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: store.go:253: [90m<nil>[0m DBG loadVersion commitID [36mhash=[0m [36mkey=[0m"KVStoreKey{0x14000c08720, bank}" [36mver=[0m0
    buffer.go:261: store.go:63: [90m<nil>[0m [32mINF[0m [1mUpgrading IAVL storage for faster queries + execution on live state. This may take a while[0m [36mcommit=[0m436F6D6D697449447B5B5D3A307D [36mstore_key=[0m"KVStoreKey{0x14000c08720, bank}" [36mversion=[0m0
    buffer.go:261: store.go:77: [90m<nil>[0m DBG Finished loading IAVL tree
    buffer.go:261: abci.go:49: [90m<nil>[0m [32mINF[0m [1mInitChain[0m [36mchainID=[0mintegration-app [36minitialHeight=[0m0
    buffer.go:261: store.go:488: [90m<nil>[0m DBG commit header and version mismatch [36mheader_height=[0m0 [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: mutable_tree.go:724: [90m<nil>[0m DBG SAVE TREE [36mversion=[0m1
    buffer.go:261: store.go:677: [90m<nil>[0m DBG prune start [36mheight=[0m1
    buffer.go:261: store.go:685: [90m<nil>[0m DBG pruning skipped, height is less than or equal to 0
    buffer.go:261: store.go:679: [90m<nil>[0m DBG prune end [36mheight=[0m1
    buffer.go:261: store.go:1135: [90m<nil>[0m DBG flushing metadata [36mheight=[0m1
    buffer.go:261: store.go:1152: [90m<nil>[0m DBG flushing metadata finished [36mheight=[0m1
panic: runtime error: invalid memory address or nil pointer dereference [recovered]
	panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x2 addr=0x18 pc=0x1059a406c]

goroutine 99 [running]:
testing.tRunner.func1.2({0x1064a14a0, 0x107aa9d20})
	/usr/local/go/src/testing/testing.go:1632 +0x1bc
testing.tRunner.func1()
	/usr/local/go/src/testing/testing.go:1635 +0x334
panic({0x1064a14a0?, 0x107aa9d20?})
	/usr/local/go/src/runtime/panic.go:785 +0x124
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseViewKeeper.getTransientAccountStore({{0x106854660, 0x14000c08770}, {0x10681a920, 0x1400088e450}, {0x0, 0x0}, {0x10685a9e0, 0x14000279900}, {0x106847ad8, 0x107bd4240}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:15 +0x4c
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setTransientBalance({{{0x106854660, 0x14000c08770}, {0x10681a920, 0x1400088e450}, {0x0, 0x0}, {0x10685a9e0, 0x14000279900}, {0x106847ad8, 0x107bd4240}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/transient_balances.go:21 +0xd8
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.setBalance({{{0x106854660, 0x14000c08770}, {0x10681a920, 0x1400088e450}, {0x0, 0x0}, {0x10685a9e0, 0x14000279900}, {0x106847ad8, 0x107bd4240}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:359 +0x274
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseSendKeeper.addCoins({{{0x106854660, 0x14000c08770}, {0x10681a920, 0x1400088e450}, {0x0, 0x0}, {0x10685a9e0, 0x14000279900}, {0x106847ad8, 0x107bd4240}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/send.go:326 +0x174
github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper.MintCoins({{{{0x106854660, 0x14000c08770}, {0x10681a920, 0x1400088e450}, {0x0, 0x0}, {0x10685a9e0, 0x14000279900}, {0x106847ad8, 0x107bd4240}, ...}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/x/bank/keeper/keeper.go:363 +0x204
github.com/cosmos/cosmos-sdk/testutil/sims.initAccountWithCoins({_, _}, {{0x106841950, 0x107bd4240}, {0x1068547b0, 0x14000916d88}, {{0x0, 0x0}, {0x105e9954c, 0xf}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/testutil/sims/address_helpers.go:70 +0x84
github.com/cosmos/cosmos-sdk/testutil/sims.addTestAddrs({_, _}, {_, _}, {{0x106841950, 0x107bd4240}, {0x1068547b0, 0x14000916d88}, {{0x0, 0x0}, ...}, ...}, ...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/testutil/sims/address_helpers.go:63 +0x120
github.com/cosmos/cosmos-sdk/testutil/sims.AddTestAddrsIncremental(...)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/testutil/sims/address_helpers.go:51
github.com/cosmos/cosmos-sdk/tests/integration/staking/keeper_test.generateAddresses(0x14000192a08, 0x64)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/staking/keeper/common_test.go:61 +0xf8
github.com/cosmos/cosmos-sdk/tests/integration/staking/keeper_test.bootstrapValidatorTest({0x106869950, 0x1400001a340}, 0x1, 0x64)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/staking/keeper/validator_test.go:31 +0x40
github.com/cosmos/cosmos-sdk/tests/integration/staking/keeper_test.TestUpdateBondedValidatorsDecreaseCliff(0x1400001a340)
	/Users/simon/Dev/go-workspace/src/github.com/injectivelabs/cosmos-sdk/tests/integration/staking/keeper/validator_test.go:67 +0x3c
testing.tRunner(0x1400001a340, 0x10680baa8)
	/usr/local/go/src/testing/testing.go:1690 +0xe4
created by testing.(*T).Run in goroutine 1
	/usr/local/go/src/testing/testing.go:1743 +0x314
FAIL	github.com/cosmos/cosmos-sdk/tests/integration/staking/keeper	0.952s
ok  	github.com/cosmos/cosmos-sdk/tests/integration/store/rootmulti	(cached)
ok  	github.com/cosmos/cosmos-sdk/tests/integration/tx	1.010s
ok  	github.com/cosmos/cosmos-sdk/tests/integration/tx/aminojson	(cached)
FAIL
Running unit tests for module cosmossdk.io/tools/confix
ok  	cosmossdk.io/tools/confix	(cached)
?   	cosmossdk.io/tools/confix/cmd/condiff	[no test files]
?   	cosmossdk.io/tools/confix/cmd/confix	[no test files]
ok  	cosmossdk.io/tools/confix/cmd	(cached)
Running unit tests for module cosmossdk.io/tools/cosmovisor
ok  	cosmossdk.io/tools/cosmovisor	(cached)
ok  	cosmossdk.io/tools/cosmovisor/cmd/cosmovisor	(cached)
ok  	cosmossdk.io/tools/cosmovisor/errors	(cached)
Running unit tests for module cosmossdk.io/tools/hubl
?   	cosmossdk.io/tools/hubl/cmd/hubl	[no test files]
?   	cosmossdk.io/tools/hubl/internal	[no test files]
Running unit tests for module cosmossdk.io/x/circuit
?   	cosmossdk.io/x/circuit	[no test files]
ok  	cosmossdk.io/x/circuit/ante	(cached)
?   	cosmossdk.io/x/circuit/types	[no test files]
ok  	cosmossdk.io/x/circuit/keeper	(cached)
Running unit tests for module cosmossdk.io/x/evidence
?   	cosmossdk.io/x/evidence/client	[no test files]
?   	cosmossdk.io/x/evidence/client/cli	[no test files]
?   	cosmossdk.io/x/evidence/exported	[no test files]
ok  	cosmossdk.io/x/evidence	(cached)
?   	cosmossdk.io/x/evidence/testutil	[no test files]
ok  	cosmossdk.io/x/evidence/keeper	(cached)
ok  	cosmossdk.io/x/evidence/simulation	(cached)
ok  	cosmossdk.io/x/evidence/types	(cached)
Running unit tests for module cosmossdk.io/x/feegrant
ok  	cosmossdk.io/x/feegrant	(cached)
ok  	cosmossdk.io/x/feegrant/client/cli	(cached)
ok  	cosmossdk.io/x/feegrant/keeper	(cached)
ok  	cosmossdk.io/x/feegrant/migrations/v2	(cached)
ok  	cosmossdk.io/x/feegrant/module	(cached)
?   	cosmossdk.io/x/feegrant/testutil	[no test files]
ok  	cosmossdk.io/x/feegrant/simulation	(cached)
Running unit tests for module cosmossdk.io/x/nft
?   	cosmossdk.io/x/nft	[no test files]
ok  	cosmossdk.io/x/nft/internal/conv	(cached)
?   	cosmossdk.io/x/nft/module	[no test files]
ok  	cosmossdk.io/x/nft/keeper	(cached)
?   	cosmossdk.io/x/nft/testutil	[no test files]
ok  	cosmossdk.io/x/nft/simulation	(cached)
Running unit tests for module cosmossdk.io/x/tx
ok  	cosmossdk.io/x/tx/decode	(cached)
?   	cosmossdk.io/x/tx/internal/testpb	[no test files]
?   	cosmossdk.io/x/tx/signing/aminojson/internal/aminojsonpb	[no test files]
?   	cosmossdk.io/x/tx/signing/aminojson/internal/testpb	[no test files]
?   	cosmossdk.io/x/tx/signing/std	[no test files]
?   	cosmossdk.io/x/tx/signing/testutil	[no test files]
ok  	cosmossdk.io/x/tx/signing	(cached)
ok  	cosmossdk.io/x/tx/signing/aminojson	(cached)
ok  	cosmossdk.io/x/tx/signing/direct	(cached)
ok  	cosmossdk.io/x/tx/signing/directaux	(cached)
?   	cosmossdk.io/x/tx/signing/textual/internal/textualpb	[no test files]
ok  	cosmossdk.io/x/tx/signing/textual	(cached)
ok  	cosmossdk.io/x/tx/signing/textual/internal/cbor	(cached)
Running unit tests for module cosmossdk.io/x/upgrade
?   	cosmossdk.io/x/upgrade/exported	[no test files]
ok  	cosmossdk.io/x/upgrade	(cached)
ok  	cosmossdk.io/x/upgrade/client/cli	(cached)
ok  	cosmossdk.io/x/upgrade/internal/conv	(cached)
ok  	cosmossdk.io/x/upgrade/keeper	(cached)
ok  	cosmossdk.io/x/upgrade/plan	(cached)
ok  	cosmossdk.io/x/upgrade/types	(cached)
make: *** [run-tests] Error 1
